<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.feaa.msd</groupId>
    <artifactId>DAM08_Ticket-Management-Application</artifactId>
    <version>2024.01</version>

    <description>Scrum REST DATA Secured Services for SpringBoot</description>

    <properties>
        <packaging-type>jar</packaging-type>
        <java.version>21</java.version>

        <ojdbc10.version>19.3.0.0</ojdbc10.version>
        <postgresql.jdbc.version>42.2.24</postgresql.jdbc.version>

        <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <packaging>${packaging-type}</packaging>

    <dependencies>
        <!-- SpringBoot basics -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Project Lombok to simplify Data Beans -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Oracle JDBC: https://medium.com/oracledevs/oracle-jdbc-drivers-on-maven-central-64fcf724d8b  -->
        <!-- https://www.oracle.com/database/technologies/maven-central-guide.html -->
        <dependency>
            <groupId>com.oracle.ojdbc</groupId>
            <artifactId>ojdbc10</artifactId>
            <version>${ojdbc10.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <!-- <version>${postgresql.jdbc.version}</version>  -->
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>3.2.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>


        <!-- Spring Boot test plus -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Data REST Experimental -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-explorer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Security  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Swagger provider -->
        <!-- https://bell-sw.com/blog/documenting-rest-api-with-swagger-in-spring-boot-3/ -->
        <!-- https://www.baeldung.com/spring-rest-openapi-documentation -->
        <!-- https://springdoc.org/#swagger-ui-properties -->
        <!-- Default Swagger Services Endpoints-->
        <!-- http://localhost:8088/scrum/v3/api-docs -->
        <!-- http://localhost:8088/scrum/v3/api-docs.yaml -->
        <!-- http://localhost:8088/scrum/swagger-ui/index.html -->
        <!-- http://localhost:8088/scrum/swagger-ui.html -->
        <!-- application.properties: springdoc.api-docs.path=/api-docs -->
        <!-- http://localhost:8088/scrum/api-docs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.0.2</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>TomcatDeployment</id>
            <!-- <packaging>war</packaging>  -->
            <properties>
                <packaging-type>war</packaging-type>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <scope>provided</scope>
                </dependency>
            </dependencies>

            <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <version>${tomcat7-maven-plugin.version}</version>
                        <configuration>
                            <url>http://localhost:8080/manager/text</url>
                            <path>/scrum/data</path>
                            <!-- Set update to true to avoid exist war package can not be override error -->
                            <update>true</update>
                            <!-- Because deploy this maven project using plugin in pom so use the manager-script role user. -->
                            <username>tomcat</username>
                            <password>tomcat</password>
                            <!-- <user username="tomcat" password="tomcat" roles="admin,manager-gui,manager-script"/> -->
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>